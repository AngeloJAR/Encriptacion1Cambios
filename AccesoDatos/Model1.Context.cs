//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_EncriptacionDesencriptacionEntities : DbContext
    {
        public db_EncriptacionDesencriptacionEntities()
            : base("name=db_EncriptacionDesencriptacionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clave> Clave { get; set; }
        public virtual DbSet<Mensaje> Mensaje { get; set; }
        public virtual DbSet<MensajeEncriptado> MensajeEncriptado { get; set; }
    
        public virtual int GuardarClaveYMensaje(string nuevaClave, string nuevoMensaje)
        {
            var nuevaClaveParameter = nuevaClave != null ?
                new ObjectParameter("NuevaClave", nuevaClave) :
                new ObjectParameter("NuevaClave", typeof(string));
    
            var nuevoMensajeParameter = nuevoMensaje != null ?
                new ObjectParameter("NuevoMensaje", nuevoMensaje) :
                new ObjectParameter("NuevoMensaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarClaveYMensaje", nuevaClaveParameter, nuevoMensajeParameter);
        }
    
        public virtual ObjectResult<string> ObtenerMensajePorClave(string claveIngresada)
        {
            var claveIngresadaParameter = claveIngresada != null ?
                new ObjectParameter("ClaveIngresada", claveIngresada) :
                new ObjectParameter("ClaveIngresada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerMensajePorClave", claveIngresadaParameter);
        }
    
        public virtual int GuardarClaveYMensajeEncriptado(string claveEncriptada, string mensajeEncriptado)
        {
            var claveEncriptadaParameter = claveEncriptada != null ?
                new ObjectParameter("ClaveEncriptada", claveEncriptada) :
                new ObjectParameter("ClaveEncriptada", typeof(string));
    
            var mensajeEncriptadoParameter = mensajeEncriptado != null ?
                new ObjectParameter("MensajeEncriptado", mensajeEncriptado) :
                new ObjectParameter("MensajeEncriptado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarClaveYMensajeEncriptado", claveEncriptadaParameter, mensajeEncriptadoParameter);
        }
    }
}
